// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WenNtoM.Models;

public partial class CS2023KursContext : DbContext
{
    public CS2023KursContext()
    {
    }

    public CS2023KursContext(DbContextOptions<CS2023KursContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Interessen> Interessen { get; set; }

    public virtual DbSet<PerInt> PerInt { get; set; }

    public virtual DbSet<Personen> Personen { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-0O4SDSG\\SQLEXPRESS;Initial Catalog=CS2023Kurs;Integrated Security=True;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Interessen>(entity =>
        {
            entity.Property(e => e.InteressenId).HasColumnName("InteressenID");
            entity.Property(e => e.Interessen1)
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("Interessen");
        });

        modelBuilder.Entity<PerInt>(entity =>
        {
            entity.HasKey(e => new { e.PerFk, e.IntFk });

            entity.Property(e => e.PerFk).HasColumnName("PerFK");
            entity.Property(e => e.IntFk).HasColumnName("IntFK");

            entity.HasOne(d => d.IntFkNavigation).WithMany(p => p.PerInt)
                .HasForeignKey(d => d.IntFk)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PerInt_Interessen");

            entity.HasOne(d => d.PerFkNavigation).WithMany(p => p.PerInt)
                .HasForeignKey(d => d.PerFk)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PerInt_Personen");
        });

        modelBuilder.Entity<Personen>(entity =>
        {
            entity.Property(e => e.PersonenId).HasColumnName("PersonenID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(10)
                .IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}